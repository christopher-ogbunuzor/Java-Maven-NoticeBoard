name: Master Branch

on:
  push:
    branches:
      - 'master'

jobs:

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
      - name: Maven Clean Package
        run: mvn -B clean package -DskipTests
      - name: Maven Clean Verify
        run: mvn -B clean verify -Pintegration-test

  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: SonarCloud Scan
        run:  mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=christopher-ogbunuzor_Java-Maven-NoticeBoard
        # run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  artifact:
    name: Publish - GitHub Packages
    runs-on: ubuntu-latest
    needs: [test, sonar]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
      - name: Publish artifact on GitHub Packages
        run: mvn -B clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}


  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [test, sonar]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}

    steps:
      - uses: actions/checkout@v1 
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }} -p "${{ secrets.DOCKER_PASS }}"
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USER }}:$REPO -t ${{ secrets.DOCKER_USER }}:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push ${{ secrets.DOCKER_USER }}

